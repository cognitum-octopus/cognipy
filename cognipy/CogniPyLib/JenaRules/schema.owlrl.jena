#------------------------------
#The Semantics of Schema Vocabulary 
#------------------------------

[scm-cls: 
		(?c rdf:type owl:Class) 
	->	
		(?c rdfs:subClassOf ?c),
		(?c owl:equivalentClass ?c),
		(?c rdfs:subClassOf owl:Thing),
		(owl:Nothing rdfs:subClassOf ?c)
]

[scm-sco: 	
		(?c1 rdfs:subClassOf ?c2),
		(?c2 rdfs:subClassOf ?c3), 
		notEqual(?c1,?c2), 
		notEqual(?c2,?c3), 
		notEqual(?c1,owl:Nothing), 
		notEqual(?c3,owl:Thing)   
	->	
		(?c1 rdfs:subClassOf ?c3) 
]

[scm-eqc1: 	
		(?c1 owl:equivalentClass ?c2), 
		notEqual(?c1,?c2)  	
	-> 
		(?c1 rdfs:subClassOf ?c2),
		(?c2 rdfs:subClassOf ?c1)
]

[scm-eqc2: 	
		(?c1 rdfs:subClassOf ?c2),
		(?c2 rdfs:subClassOf ?c1), 
		notEqual(?c1,?c2)  	
	-> 
		(?c1 owl:equivalentClass ?c2)
]

[scm-op: 	
		(?p rdf:type owl:ObjectProperty) 
	-> 	
		(?p rdfs:subPropertyOf ?p),
		(?p owl:equivalentProperty ?p)
]

[scm-dp:
		(?p rdf:type owl:DatatypeProperty) 
	-> 	
		(?p rdfs:subPropertyOf ?p),
		(?p owl:equivalentProperty ?p)
]

[scm-spo: 	
		(?p1 rdfs:subPropertyOf ?p2),
		(?p2 rdfs:subPropertyOf ?p3), 
		notEqual(?p1,?p2), 
		notEqual(?p2,?p3)
	-> 	
		(?p1 rdfs:subPropertyOf ?p3)
]

[scm-eqp1: 	
		(?p1 owl:equivalentProperty ?p2), 
		notEqual(?p1,?p2)  	
	->  
		(?p1 rdfs:subPropertyOf ?p2),
		(?p2 rdfs:subPropertyOf ?p1)
]

[scm-eqp2: 	
		(?p1 rdfs:subPropertyOf ?p2),
		(?p2 rdfs:subPropertyOf ?p1), 
		notEqual(?p2,?p1)  
	-> 	
		(?p1 owl:equivalentProperty ?p2)
]

[scm-dom1: 	
		(?p rdfs:domain ?c1),
		(?c1 rdfs:subClassOf ?c2) 
	-> 	
		(?p rdfs:domain ?c2)
]

[scm-dom2: 	
		(?p2 rdfs:domain ?c),
		(?p1 rdfs:subPropertyOf ?p2) 
	-> 	
		(?p1 rdfs:domain ?c)
]

[scm-rng1: 	
		(?p rdfs:range ?c1),
		(?c1 rdfs:subClassOf ?c2) 
	-> 	
		(?p rdfs:range ?c2)
]

[scm-rng2: 	
		(?p2 rdfs:range ?c),
		(?p1 rdfs:subPropertyOf ?p2) 
	-> 	
		(?p1 rdfs:range ?c)
]

[scm-hv: 	
		(?c1 owl:hasValue ?i),
		(?c1 owl:onProperty ?p1),
		(?c2 owl:hasValue ?i),
		(?c2 owl:onProperty ?p2),
		(?p1 rdfs:subPropertyOf ?p2) 	
	-> 
		(?c1 rdfs:subClassOf ?c2)
]

[scm-svf1: 	
		(?c1 owl:someValuesFrom ?y1),
		(?c1 owl:onProperty ?p),
		(?c2 owl:someValuesFrom ?y2),
		(?c2 owl:onProperty ?p),
		(?y1 rdfs:subClassOf ?y2) 
	-> 	
		(?c1 rdfs:subClassOf ?c2)
]

[scm-svf2: 	
		(?c1 owl:someValuesFrom ?y),
		(?c1 owl:onProperty ?p1),
		(?c2 owl:someValuesFrom ?y),
		(?c2 owl:onProperty ?p2),
		(?p1 rdfs:subPropertyOf ?p2) 
	-> 	
		(?c1 rdfs:subClassOf ?c2)
]

[scm-avf1: 	
		(?c1 owl:allValuesFrom ?y1),
		(?c1 owl:onProperty ?p),
		(?c2 owl:allValuesFrom ?y2),
		(?c2 owl:onProperty ?p),
		(?y1 rdfs:subClassOf ?y2) 
	-> 	
		(?c1 rdfs:subClassOf ?c2)
]

[scm-avf2: 	
		(?c1 owl:allValuesFrom ?y),
		(?c1 owl:onProperty ?p1),
		(?c2 owl:allValuesFrom ?y),
		(?c2 owl:onProperty ?p2),
		(?p1 rdfs:subPropertyOf ?p2) 
	-> 	
		(?c2 rdfs:subClassOf ?c1)
]

[scm-int: (?C owl:intersectionOf ?L) -> listMapAsObject(?C, rdfs:subClassOf, ?L)]
[scm-uni: (?C owl:unionOf ?L) -> listMapAsSubject(?L, rdfs:subClassOf, ?C)]

